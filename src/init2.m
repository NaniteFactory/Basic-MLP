% 테스트용 (예제 패턴)

patterns = [ 0.1875 0.75 0.625 0.0625 0.9375 0.4375 0.75 0.625 1 0 0.25 0.75 0.875 0.375 0.625 0.6875 0.375 0.9375 0.75 0.0625; 
        	 0.5 1 1 0.4375 0 0.5 0.5625 0 0 0.5 0.5 0 0.25 1 0.5 0 0 0.375 0.4375 0;  
        	 0.3125 0.5 0.5 0.5 0.1875 0.9375 0.9375 0.4375 0.1875 0.125 0.8125 0.4375 0.8125 0.6875 0.75 0.5 0.0625 0.5625 0.75 0.125;  
        	 0.4375 0.75 0.75 0.4375 0.0625 0.5 0.625 0.75 0.0625 0.6875 0.875 0.5625 0.3125 0.3125 0.6875 0.4375 0.375 0.75 0.6875 0.0625;  
        	 0.0625 0.4375 0.5 0.1875 0.6875 0.75 0.625 0.75 0.75 0.375 0.375 0.6875 0.1875 0.875 0.9375 0.375 0 0.1875 0.75 0.125; 
        	 0 0.75 0.25 0 0 0.625 0.4375 0 0 0.5 0.5 0 0 0.5 0.5625 0 0 0.1875 0.625 0; 
        	 0.1875 1 1 0.875 0.0625 0.8125 0.75 0 0.4375 0.0625 0.875 0.25 0.75 0.625 0.8125 0.25 0.0625 0.6875 0.9375 0.125; 
        	 0.6875 0.875 1 0.8125 0.5625 0.1875 0.0625 1 0 0.4375 0.75 0.75 0.1875 0.625 1 0.75 0.5625 0.75 0.75 0.5625; 
        	 0.1875 0.9375 1 0.6875 0.6875 0.4375 0.25 0.75 0.75 0.25 0.25 0.875 0.6875 0.625 0.5 0.8125 0.0625 0.6875 0.6875 0.1875; 
        	 0 0.25 1 0.25 0 0 1 0.25 0 0.125 1 0.25 0.25 0.9375 1 0.25 0 0.3125 0.9375 0.25; 
        	 0.375 1 1 1 0 0.8125 0.5 0 0.1875 0.1875 0.9375 0.125 0.75 0.625 0.75 0.25 0.0625 0.75 0.9375 0.0625; 
        	 0.75 0.8125 0.8125 0.9375 0.0625 0.25 0.3125 1 0.25 1 1 0.375 0.625 0.9375 1 0.875 0.125 0.25 0.25 0.1875; 
        	 0.5 0.9375 1 0.375 0.9375 0.1875 0.1875 0.9375 0.8125 0 0 1 0.875 0.375 0.1875 0.9375 0.1875 0.8125 1 0.5; 
        	 0.25 1 1 0 0.25 1 1 0 0.25 1 1 0 0.25 1 1 0 0.25 1 1 0; 
        	 0.6875 1 1 1 0.375 0.9375 0.4375 0 0.1875 0.25 0.8125 0.375 0.8125 0.6875 0.625 0.5 0.0625 0.5625 0.75 0.1875; 
        	 0.6875 0.8125 0.8125 0.75 0.375 0.125 0.1875 1 0.0625 0.75 0.8125 0.6875 0.0625 0.5625 1 0.9375 0.1875 0.75 0.75 0.75; 
        	 0.5 0.875 0.875 0.625 1 0.125 0.25 0.75 0.75 0 0.5 0.6875 0.875 0.25 0.9375 0.3125 0.5625 0.75 0.5625 0; 
        	 0.5625 1 1 0.6875 0 0 1 0 0.0625 0.375 0.875 0 0.1875 0.9375 0.75 0 0 0.5 0.5625 0; 
        	 0.6875 1 1 0.875 0.1875 0.9375 0.25 0.125 0 0.1875 0.9375 0.125 0.875 0.4375 0.75 0.25 0.1875 0.8125 0.875 0.125;
        	 0.8125 1 0.9375 0.5 0.25 0.125 0.5625 0.75 0 0.5625 1 0.6875 0.6875 0.1875 0.375 0.75 0.375 1 0.9375 0.3125;
        	 0.0625 0.875 1 0.3125 0.625 0.6875 0.3125 0.75 0.75 0.25 0.25 0.75 0.625 0.625 0.3125 0.75 0.0625 0.8125 1 0.375;
        	 0 0.75 1 0.5 0 0.75 1 0.5 0 0.75 1 0.5 0 0.75 1 0.5 0 0.75 1 0.5;
        	 0.75 1 0.75 0.8125 0.0625 0.8125 0.625 0 0 0 0.875 0.25 0.5 0.4375 1 0.0625 0.1875 0.75 0.5625 0;
        	 0.8125 0.8125 0.9375 0.625 0.25 0 0.0625 1 0.0625 0.75 0.5625 0.875 0 0.4375 1 0.8125 0.5 0.9375 0.75 0.75;
        	 0.375 0.9375 0.9375 0.3125 1 0.25 0.4375 0.6875 0.8125 0.375 0.25 0.75 0.3125 0.875 0.8125 0.625 0 0.375 0.75 0.3125;
        	 0.1875 0.9375 0 0 0.1875 0.9375 0 0 0 1 0 0 0 1 0 0 0 0.625 0.1875 0;
        	 0.5 0.75 0.75 0.75 0.375 0.875 0.75 0.25 0 0.0625 0.9375 0.125 0.625 0.3125 0.8125 0.25 0.1875 0.875 0.9375 0.0625;
        	 0.8125 1 0.875 0.1875 0.5 0 0.4375 0.9375 0 0.625 0.625 1 0.5 0.6875 1 0.6875 0.4375 0.5 0.5 0.3125;
        	 0.1875 0.9375 1 0.8125 0.6875 0.5 0 0.875 0.75 0.375 0 0.875 0.1875 0.875 0.8125 0.8125 0 0.1875 0.4375 0.0625;
        	 0 0 0.875 0.625 0 0.1875 1 0.375 0 0.5 1 0.125 0 0.8125 0.875 0 0.125 1 0.625 0;
        	 0.5 0.75 0.75 0.5625 0.375 0.9375 0.625 0.125 0 0.1875 1 0 0.875 0.5 0.9375 0 0.1875 0.75 0.375 0;
        	 0.8125 1 0.75 0.1875 0.75 0.0625 0.5625 0.75 0 0.75 1 0.5 0.4375 0.25 0.6875 0.5 0.375 0.875 1 0.4375;
        	 0.25 1 1 0.625 0.6875 0.625 0.1875 0.875 0.6875 0.4375 0 0.75 0.375 0.875 0.125 0.875 0 0.625 1 0.75;
        	 0.125 1 0 0 0 1 0 0 0 0.8125 0.25 0 0 0.75 0.25 0 0 0.375 0.125 0;
        	 0.5 0.75 0.6875 0.5 0.5625 0.9375 0.625 0.5 0 0.5625 0.875 0 0.6875 0.3125 1 0 0.375 0.875 0.9375 0;
        	 0.1875 0.6875 0.75 0.375 0.3125 0.625 0.625 0.75 0 0.5 1 0.9375 0.5 0.375 0.3125 1 0.1875 0.875 1 0.75;
        	 0.0625 0.8125 1 0.4375 0.625 0.625 0.375 0.75 0.75 0.3125 0.25 0.75 0.5 0.8125 0.6875 0.625 0 0.625 0.8125 0.0625;
        	 0 0.4375 0.5 0 0 0.5 0.5 0 0 0.5 0.5 0 0.5 1 0.5 0 0 0.5625 0.4375 0;
        	 0.875 0.875 0.75 0.875 0.1875 0.9375 0.375 0 0 0.25 0.9375 0 0.5 0.25 1 0 0.5 0.875 0.625 0;
        	 0.3125 1 0.9375 0.375 0.1875 0.3125 0.25 0.9375 0 0.875 0.875 0.875 0.4375 0.5 0.875 0.3125 0.3125 0.75 0.6875 0.0625;
]';

disp('init...')

imgsTrain = patterns;
imgsTest = patterns;

% 학습 패턴 수 정의
g_nPatsTrain = size(imgsTrain, 2); % 2는 열의 갯수 출력. 즉 트레이닝 패턴 이미지의 수.
g_nPatsTest = size(imgsTest, 2); % 테스트 패턴 이미지의 수.
g_nInputs = size(imgsTrain, 1); % 2는 행의 갯수 출력. 즉 패턴 이미지의 입력 해상도.
g_nHidden = floor(g_nInputs / 2); % 은닉층 노드의 수.
g_nOutputs = 4; % 출력 노드의 수.

% 사용할 패턴수 임시 조정
g_nPatsTrainPerEpoch = floor(g_nPatsTrain / 2);
g_nPatsTestPerEpoch = floor(g_nPatsTest / 2);

% 바이어스 가중치를 포함하여, 작은 초기 가중치를 랜덤하게 설정
g_hiddenWeights = 0.5 * (rand(g_nHidden, g_nInputs+1) - ones(g_nHidden, g_nInputs+1) * .5);
g_outputWeights = 0.5 * (rand(g_nOutputs, g_nHidden+1) - ones(g_nOutputs, g_nHidden+1) * .5);

g_inputTrain = patterns;
g_inputTest = patterns;

% 목표 패턴 설정(0: 1 0 0 0 , 1: 0 1 0 0, 2: 0 0 1 0, 3: 0 0 0 1, ...)
g_targetTrain = zeros(g_nOutputs, g_nPatsTrain);
g_targetTest = zeros(g_nOutputs, g_nPatsTest);

class = 1;
for pat = 1:g_nPatsTrain,
  g_targetTrain(class,pat) = 1;
  class = class + 1;
  if class > g_nOutputs
    class = 1;
  end
end
class = 1;
for pat = 1:g_nPatsTest,
  g_targetTest(class,pat) = 1;
  class = class + 1;
  if class > g_nOutputs
    class = 1;
  end
end

g_eta = 0.1; % 학습률 

g_nEpochs = 100; % 학습 epoch 수. run이 호출하는 이포크의 수. % const.
g_nEpochsSum = 0; % 지금까지의 학습 epoch 수. run이 호출될 때마다 g_nEpochs에 의하여 증가한다. 

% 학습 커브를 플롯
g_nEpochsMinInGraph = 200; % 에러 플롯 당 이포크 수의 최소. 그래프 그릴 때 좌표축 크기.
g_errorsTrainInGraph = zeros(1,g_nEpochsMinInGraph); % 그래프에서 학습 에러율 변수. 이포크당 에러.
g_errorsTestInGraph = zeros(1,g_nEpochsMinInGraph); % 그래프에서 테스트 에러율 변수. 이포크당 에러.
g_nEpochsInGraph = [1:g_nEpochsMinInGraph]; % 그래프에서 이포크.
